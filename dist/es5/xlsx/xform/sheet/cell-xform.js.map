{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/cell-xform.js"],"names":["utils","require","BaseXform","Enums","Range","RichTextXform","getValueType","v","undefined","ValueType","Null","String","Number","Boolean","Date","formula","Formula","error","Error","getEffectiveCellType","cell","type","result","CellXform","module","exports","richTextXForm","inherits","tag","prepare","model","options","styleId","styles","addStyleModel","style","sharedStrings","ssId","add","value","date1904","Merge","merges","formulae","address","sharedFormula","master","si","ref","expandToAddress","siFormulae","renderFormula","xmlStream","attrs","t","range","leafNode","addAttribute","dateToExcel","render","openNode","richText","self","forEach","text","closeNode","parseOpen","node","parser","name","attributes","r","s","parseInt","currentNode","parseText","parseClose","xmlDecode","parseFloat","push","reconcile","getStyleModel","getString","RichText","isDateFmt","numFmt","excelToDate"],"mappings":"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","file":"cell-xform.js","sourcesContent":["/**\r\n * Copyright (c) 2015 Guyon Roche\r\n * LICENCE: MIT - please refer to LICENCE file included with this module\r\n * or https://github.com/guyonroche/exceljs/blob/master/LICENSE\r\n */\r\n\r\n'use strict';\r\n\r\nvar utils = require('../../../utils/utils');\r\nvar BaseXform = require('../base-xform');\r\n\r\nvar Enums = require('../../../doc/enums');\r\nvar Range = require('../../../doc/range');\r\n\r\nvar RichTextXform = require('../strings/rich-text-xform');\r\n\r\nfunction getValueType(v) {\r\n  if ((v === null) || (v === undefined)) {\r\n    return Enums.ValueType.Null;\r\n  } else if ((v instanceof String) || (typeof v === 'string')) {\r\n    return Enums.ValueType.String;\r\n  } else if (typeof v === 'number') {\r\n    return Enums.ValueType.Number;\r\n  } else if (typeof v === 'boolean') {\r\n    return Enums.ValueType.Boolean;\r\n  } else if (v instanceof Date) {\r\n    return Enums.ValueType.Date;\r\n  } else if (v.formula) {\r\n    return Enums.ValueType.Formula;\r\n  } else if (v.error) {\r\n    return Enums.ValueType.Error;\r\n  }\r\n  throw new Error('I could not understand type of value');\r\n}\r\n\r\nfunction getEffectiveCellType(cell) {\r\n  switch (cell.type) {\r\n    case Enums.ValueType.Formula:\r\n      return getValueType(cell.result);\r\n    default:\r\n      return cell.type;\r\n  }\r\n}\r\n\r\nvar CellXform = module.exports = function() {\r\n  this.richTextXForm = new RichTextXform();\r\n};\r\n\r\nutils.inherits(CellXform, BaseXform, {\r\n\r\n  get tag() {\r\n    return 'c';\r\n  },\r\n\r\n  prepare: function(model, options) {\r\n    var styleId = options.styles.addStyleModel(model.style || {}, getEffectiveCellType(model));\r\n    if (styleId) {\r\n      model.styleId = styleId;\r\n    }\r\n\r\n    switch (model.type) {\r\n      case Enums.ValueType.String:\r\n        if (options.sharedStrings) {\r\n          model.ssId = options.sharedStrings.add(model.value);\r\n        }\r\n        break;\r\n      case Enums.ValueType.Date:\r\n        if (options.date1904) {\r\n          model.date1904 = true;\r\n        }\r\n        break;\r\n      case Enums.ValueType.Merge:\r\n        options.merges.add(model);\r\n        break;\r\n      case Enums.ValueType.Formula:\r\n        if (options.date1904) {\r\n          // in case valueType is date\r\n          model.date1904 = true;\r\n        }\r\n        if (model.formula) {\r\n          options.formulae[model.address] = model;\r\n        } else if (model.sharedFormula) {\r\n          const master = options.formulae[model.sharedFormula];\r\n          if (!master) {\r\n            throw new Error('Shared Formula master must exist above and or left of clone');\r\n          }\r\n          if (master.si !== undefined) {\r\n            model.si = master.si;\r\n            master.ref.expandToAddress(model.address);\r\n          } else {\r\n            model.si = master.si = options.siFormulae++;\r\n            master.ref = new Range(master.address, model.address);\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n\r\n  renderFormula: function(xmlStream, model) {\r\n    var attrs = null;\r\n    if (model.ref) {\r\n      attrs = {\r\n        t: 'shared',\r\n        ref: model.ref.range,\r\n        si: model.si,\r\n      };\r\n    } else if (model.si !== undefined) {\r\n      attrs = {\r\n        t: 'shared',\r\n        si: model.si,\r\n      };\r\n    }\r\n    switch (getValueType(model.result)) {\r\n      case Enums.ValueType.Null: // ?\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        break;\r\n      case Enums.ValueType.String:\r\n        // oddly, formula results don't ever use shared strings\r\n        xmlStream.addAttribute('t', 'str');\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        xmlStream.leafNode('v', null, model.result);\r\n        break;\r\n      case Enums.ValueType.Number:\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        xmlStream.leafNode('v', null, model.result);\r\n        break;\r\n      case Enums.ValueType.Boolean:\r\n        xmlStream.addAttribute('t', 'b');\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        xmlStream.leafNode('v', null, model.result ? 1 : 0);\r\n        break;\r\n      case Enums.ValueType.Error:\r\n        xmlStream.addAttribute('t', 'e');\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        xmlStream.leafNode('v', null, model.result.error);\r\n        break;\r\n      case Enums.ValueType.Date:\r\n        xmlStream.leafNode('f', attrs, model.formula);\r\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.result, model.date1904));\r\n        break;\r\n        // case Enums.ValueType.Hyperlink: // ??\r\n        // case Enums.ValueType.Formula:\r\n      default:\r\n        throw new Error('I could not understand type of value');\r\n    }\r\n  },\r\n\r\n  render: function(xmlStream, model) {\r\n    if ((model.type === Enums.ValueType.Null) && !model.styleId) {\r\n      // if null and no style, exit\r\n      return;\r\n    }\r\n\r\n    xmlStream.openNode('c');\r\n    xmlStream.addAttribute('r', model.address);\r\n\r\n    if (model.styleId) {\r\n      xmlStream.addAttribute('s', model.styleId);\r\n    }\r\n\r\n    switch (model.type) {\r\n      case Enums.ValueType.Null:\r\n        break;\r\n\r\n      case Enums.ValueType.Number:\r\n        xmlStream.leafNode('v', null, model.value);\r\n        break;\r\n\r\n      case Enums.ValueType.Boolean:\r\n        xmlStream.addAttribute('t', 'b');\r\n        xmlStream.leafNode('v', null, model.value ? '1' : '0');\r\n        break;\r\n\r\n      case Enums.ValueType.Error:\r\n        xmlStream.addAttribute('t', 'e');\r\n        xmlStream.leafNode('v', null, model.value.error);\r\n        break;\r\n\r\n      case Enums.ValueType.String:\r\n        if (model.ssId !== undefined) {\r\n          xmlStream.addAttribute('t', 's');\r\n          xmlStream.leafNode('v', null, model.ssId);\r\n        } else {\r\n          if (model.value && model.value.richText) {\r\n            xmlStream.addAttribute('t', 'inlineStr');\r\n            xmlStream.openNode('is');\r\n            var self = this;\r\n            model.value.richText.forEach(function(text) {\r\n              self.richTextXForm.render(xmlStream, text);\r\n            });\r\n            xmlStream.closeNode('is');\r\n          } else {\r\n            xmlStream.addAttribute('t', 'str');\r\n            xmlStream.leafNode('v', null, model.value);\r\n          }\r\n        }\r\n        break;\r\n\r\n      case Enums.ValueType.Date:\r\n        xmlStream.leafNode('v', null, utils.dateToExcel(model.value, model.date1904));\r\n        break;\r\n\r\n      case Enums.ValueType.Formula:\r\n        this.renderFormula(xmlStream, model);\r\n        break;\r\n\r\n      case Enums.ValueType.Merge:\r\n        // nothing to add\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    xmlStream.closeNode(); // </c>\r\n  },\r\n\r\n  parseOpen: function(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'c':\r\n        // var address = colCache.decodeAddress(node.attributes.r);\r\n        var model = this.model = {\r\n          address: node.attributes.r\r\n        };\r\n        this.t = node.attributes.t;\r\n        if (node.attributes.s) {\r\n          model.styleId = parseInt(node.attributes.s, 10);\r\n        }\r\n        return true;\r\n\r\n      case 'f':\r\n        this.currentNode = 'f';\r\n        this.model.si = node.attributes.si;\r\n        if (node.attributes.t === 'shared') {\r\n          this.model.sharedFormula = true;\r\n        }\r\n        this.model.ref = node.attributes.ref;\r\n        return true;\r\n\r\n      case 'v':\r\n        this.currentNode = 'v';\r\n        return true;\r\n\r\n      case 't':\r\n        this.currentNode = 't';\r\n        return true;\r\n\r\n      case 'r':\r\n        this.parser = this.richTextXForm;\r\n        this.parser.parseOpen(node);\r\n        return true;\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  },\r\n  parseText: function(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n      return;\r\n    }\r\n    switch (this.currentNode) {\r\n      case 'f':\r\n        this.model.formula = this.model.formula ? this.model.formula + text : text;\r\n        break;\r\n      case 'v':\r\n      case 't':\r\n        if (this.model.value && this.model.value.richText) {\r\n          this.model.value.richText.text = this.model.value.richText.text ? this.model.value.richText.text + text : text;\r\n        } else {\r\n          this.model.value = this.model.value ? this.model.value + text : text;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  parseClose: function(name) {\r\n    switch (name) {\r\n      case 'c':\r\n        var model = this.model;\r\n\r\n        // first guess on cell type\r\n        if (model.formula || model.sharedFormula) {\r\n          model.type = Enums.ValueType.Formula;\r\n          if (model.value) {\r\n            if (this.t === 'str') {\r\n              model.result = utils.xmlDecode(model.value);\r\n            } else if (this.t === 'b') {\r\n              model.result = parseInt(model.value, 10) !== 0;\r\n            } else if (this.t === 'e') {\r\n              model.result = {error: model.value};\r\n            } else {\r\n              model.result = parseFloat(model.value);\r\n            }\r\n            model.value = undefined;\r\n          }\r\n        } else if (model.value !== undefined) {\r\n          switch (this.t) {\r\n            case 's':\r\n              model.type = Enums.ValueType.String;\r\n              model.value = parseInt(model.value, 10);\r\n              break;\r\n            case 'str':\r\n              model.type = Enums.ValueType.String;\r\n              model.value = utils.xmlDecode(model.value);\r\n              break;\r\n            case 'inlineStr':\r\n              model.type = Enums.ValueType.String;\r\n              break;\r\n            case 'b':\r\n              model.type = Enums.ValueType.Boolean;\r\n              model.value = parseInt(model.value, 10) !== 0;\r\n              break;\r\n            case 'e':\r\n              model.type = Enums.ValueType.Error;\r\n              model.value = {error: model.value};\r\n              break;\r\n            default:\r\n              model.type = Enums.ValueType.Number;\r\n              model.value = parseFloat(model.value);\r\n              break;\r\n          }\r\n        } else if (model.styleId) {\r\n          model.type = Enums.ValueType.Null;\r\n        } else {\r\n          model.type = Enums.ValueType.Merge;\r\n        }\r\n        return false;\r\n      case 'f':\r\n      case 'v':\r\n      case 'is':\r\n        this.currentNode = undefined;\r\n        return true;\r\n      case 't':\r\n        if (this.parser) {\r\n          this.parser.parseClose(name);\r\n          return true;\r\n        } else {\r\n          this.currentNode = undefined;\r\n          return true;\r\n        }\r\n      case 'r':\r\n        this.model.value = this.model.value || {};\r\n        this.model.value.richText = this.model.value.richText || [];\r\n        this.model.value.richText.push(this.parser.model);\r\n        this.parser = undefined;\r\n        this.currentNode = undefined;\r\n        return true;\r\n      default:\r\n        if (this.parser) {\r\n          this.parser.parseClose(name);\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n  },\r\n\r\n  reconcile: function(model, options) {\r\n    var style = model.styleId && options.styles.getStyleModel(model.styleId);\r\n    if (style) {\r\n      model.style = style;\r\n    }\r\n    if (model.styleId !== undefined) {\r\n      model.styleId = undefined;\r\n    }\r\n\r\n    switch (model.type) {\r\n      case Enums.ValueType.String:\r\n        if (typeof model.value === 'number') {\r\n          model.value = options.sharedStrings.getString(model.value);\r\n        }\r\n        if (model.value.richText) {\r\n          model.type = Enums.ValueType.RichText;\r\n        }\r\n        break;\r\n      case Enums.ValueType.Number:\r\n        if (style && utils.isDateFmt(style.numFmt)) {\r\n          model.type = Enums.ValueType.Date;\r\n          model.value = utils.excelToDate(model.value, options.date1904);\r\n        }\r\n        break;\r\n      case Enums.ValueType.Formula:\r\n        if ((model.result !== undefined) && style && utils.isDateFmt(style.numFmt)) {\r\n          model.result = utils.excelToDate(model.result, options.date1904);\r\n        }\r\n        if (model.sharedFormula) {\r\n          if (model.formula) {\r\n            options.formulae[model.si] = model;\r\n            delete model.sharedFormula;\r\n          } else {\r\n            model.sharedFormula = options.formulae[model.si].address;\r\n          }\r\n          delete model.si;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n});\r\n"]}